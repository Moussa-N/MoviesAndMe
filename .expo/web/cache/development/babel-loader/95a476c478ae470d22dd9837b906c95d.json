{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/moussa-n/Bureau/Apps/Git/MoviesAndMe/Components/Search.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FilmItem from \"./FilmItem\";\nimport { getFilmsFromApiWithSearchedText } from \"../API/TMDBApi\";\nimport { connect } from 'react-redux';\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n\n    _this._displayDetailForFilm = function (idFilm) {\n      _this.props.navigation.navigate(\"FilmDetail\", {\n        idFilm: idFilm\n      });\n    };\n\n    _this.page = 0;\n    _this.totalPages = 0;\n    _this.searchedText = \"\";\n    _this.state = {\n      films: [],\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"_loadFilms\",\n    value: function _loadFilms() {\n      var _this2 = this;\n\n      if (this.searchedText.length > 0) {\n        this.setState({\n          isLoading: true\n        });\n        getFilmsFromApiWithSearchedText(this.searchedText, this.page + 1).then(function (data) {\n          _this2.page = data.page;\n          _this2.totalPages = data.total_pages;\n\n          _this2.setState({\n            films: [].concat(_toConsumableArray(_this2.state.films), _toConsumableArray(data.results)),\n            isLoading: false\n          });\n        });\n      }\n    }\n  }, {\n    key: \"_displayLoading\",\n    value: function _displayLoading() {\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.loading_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"_searchTextInputChanged\",\n    value: function _searchTextInputChanged(text) {\n      this.searchedText = text;\n    }\n  }, {\n    key: \"_searchFilms\",\n    value: function _searchFilms() {\n      var _this3 = this;\n\n      this.page = 0;\n      this.totalPages = 0;\n      this.setState({\n        films: []\n      }, function () {\n        console.log(\"Page : \" + _this3.page + \" / TotalPages : \" + _this3.totalPages + \" / Nombres de films : \" + _this3.state.films.length);\n\n        _this3._loadFilms();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: styles.main_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        onSubimitEditing: function onSubimitEditing() {\n          return _this4._searchFilms();\n        },\n        onChangeText: function onChangeText(text) {\n          return _this4._searchTextInputChanged(text);\n        },\n        style: styles.textinput,\n        placeholder: \"Titre du film\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        style: {\n          height: 50\n        },\n        title: \"Rechercher\",\n        onPress: function onPress() {\n          return _this4._searchFilms();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }), React.createElement(FlatList, {\n        data: this.state.films,\n        extraData: this.props.favoritesFilm,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(FilmItem, {\n            film: item,\n            isFilmFavorite: _this4.props.favoritesFilm.findIndex(function (film) {\n              return film.id === item.id;\n            }) !== -1 ? true : false,\n            displayDetailForFilm: _this4._displayDetailForFilm,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }), \"onEndReachedThreshold=\", 0.5, \"onEndReached=\", function () {\n        if (_this4.page < _this4.totalPages) {\n          _this4._loadFilms();\n        }\n      }, this._displayLoading());\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  main_container: {\n    flex: 1\n  },\n  textinput: {\n    marginLeft: 5,\n    marginRight: 5,\n    height: 50,\n    borderColor: '#000000',\n    borderWidth: 1,\n    paddingLeft: 5\n  },\n  loading_container: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 100,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    favoritesFilm: state.favoritesFilm\n  };\n};\n\nexport default connect(mapStateToProps)(Search);","map":{"version":3,"sources":["/home/moussa-n/Bureau/Apps/Git/MoviesAndMe/Components/Search.js"],"names":["React","FilmItem","getFilmsFromApiWithSearchedText","connect","Search","props","_displayDetailForFilm","idFilm","navigation","navigate","page","totalPages","searchedText","state","films","isLoading","length","setState","then","data","total_pages","results","styles","loading_container","text","console","log","_loadFilms","main_container","_searchFilms","_searchTextInputChanged","textinput","height","favoritesFilm","item","id","toString","findIndex","film","_displayLoading","Component","StyleSheet","create","flex","marginLeft","marginRight","borderColor","borderWidth","paddingLeft","position","left","right","top","bottom","alignItems","justifyContent","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, View, Button, TextInput, FlatList, Text, ActivityIndicator } from 'react-native'\r\nimport FilmItem from './FilmItem'\r\nimport { getFilmsFromApiWithSearchedText } from '../API/TMDBApi'\r\nimport { connect } from 'react-redux'\r\n\r\n    class Search extends React.Component {\r\n\r\n        constructor(props) {\r\n            super(props)\r\n                \r\n                this.page = 0\r\n                this.totalPages = 0\r\n                this.searchedText= \"\"\r\n            // Creer les  proprietes de  notre component custom Search\r\n                this.state = { \r\n                \r\n                    films: [],\r\n                    isLoading: false // Par defaut a false car il n'y a pas de chargement tant qu'on ne lance pas de recherche\r\n            }\r\n\r\n           // this.searchedText= \"\"\r\n        }\r\n\r\n            _loadFilms() {\r\n\r\n                if (this.searchedText.length > 0 ) { //Seulement si le texte recherche n'est pas vide\r\n\r\n                    this.setState({ isLoading: true }) // Lancement du chargement\r\n\r\n                    getFilmsFromApiWithSearchedText(this.searchedText, this.page+1).then(data => {\r\n                        this.page = data.page\r\n                        this.totalPages = data.total_pages\r\n                        this.setState({ \r\n                            films: [ ...this.state.films, ...data.results ], // = films: this.state.films.concat(data.results)\r\n                            isLoading: false // Arret du chargement\r\n                        })\r\n                    })\r\n            }\r\n            }\r\n\r\n\r\n            _displayLoading(){\r\n\r\n                if (this.state.isLoading) {\r\n\r\n                    return (\r\n                        <View style={styles.loading_container}>\r\n                            <ActivityIndicator size='large' />\r\n                        </View>\r\n                    )\r\n                }\r\n\r\n            }\r\n\r\n\r\n            _searchTextInputChanged(text) {\r\n\r\n                this.searchedText = text //Modification du  texte recherche a chaque saisie de texte, sana passer par le setState\r\n            }\r\n\r\n            _searchFilms () {\r\n\r\n                this.page = 0\r\n                this.totalPages = 0\r\n                this.setState({\r\n                    films: []\r\n                }, () => {\r\n\r\n                    console.log(\"Page : \" + this.page + \" / TotalPages : \" + this.totalPages + \" / Nombres de films : \" + this.state.films.length );\r\n                \r\n                this._loadFilms()\r\n\r\n                })                \r\n            }\r\n\r\n            _displayDetailForFilm = (idFilm) => {\r\n\r\n                this.props.navigation.navigate(\"FilmDetail\", { idFilm: idFilm })                \r\n            }\r\n\r\n        render() {\r\n            return(\r\n            \r\n                <View style={styles.main_container}>\r\n\r\n                <TextInput \r\n                    onSubimitEditing= {() => this._searchFilms()} \r\n                    onChangeText= {(text) => this._searchTextInputChanged(text)}\r\n                    style={styles.textinput}\r\n                    placeholder=\"Titre du film\"\r\n                />\r\n\r\n                <Button style={{ height: 50, }} title=\"Rechercher\" onPress={() => this._searchFilms() }/>\r\n\r\n                <FlatList\r\n                    data={this.state.films}\r\n\r\n                    extraData= { this.props.favoritesFilm }\r\n    // extraData pour expliquer a la FlatList aue d'autres donnees doivent etre prises en compte si on lui demande de se re-rendre\r\n                    \r\n                    keyExtractor={(item) => item.id.toString()}\r\n                    \r\n                    renderItem={({item}) => \r\n                        <FilmItem \r\n                            film={item} \r\n        // Ajout d'une props isFilmFavorite pour indiquer a l'item d'afficher un coeur ou non\r\n                            isFilmFavorite={(this.props.favoritesFilm.findIndex(film => film.id === item.id) !== -1) ? true : false}\r\n                            displayDetailForFilm={this._displayDetailForFilm}/>}\r\n                />\r\n\r\n                onEndReachedThreshold={0.5}\r\n                    onEndReached={() => {\r\n                        if (this.page < this.totalPages) {\r\n\r\n                            this._loadFilms()\r\n                        }\r\n                    }}\r\n\r\n                {this._displayLoading()}\r\n            \r\n                </View>\r\n            )\r\n         }\r\n    }\r\n\r\n    const styles = StyleSheet.create ({\r\n\r\n        main_container: {\r\n            \r\n            flex: 1\r\n        },\r\n\r\n        textinput : {\r\n\r\n            marginLeft: 5,\r\n            marginRight: 5,\r\n            height: 50,\r\n            borderColor: '#000000',\r\n            borderWidth: 1,\r\n            paddingLeft: 5,\r\n    },\r\n\r\n    loading_container : {\r\n\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 100,\r\n        bottom: 0,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n})\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        favoritesFilm: state.favoritesFilm\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Search)"]},"metadata":{},"sourceType":"module"}