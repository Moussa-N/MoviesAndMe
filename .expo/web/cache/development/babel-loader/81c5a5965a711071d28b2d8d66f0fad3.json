{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/moussa-n/Bureau/Apps/Git/MoviesAndMe/Components/FilmDetail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getFilmDetailFromApi, getImageFromApi } from \"../API/TMDBApi\";\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\n\nvar FilmDetail = function (_React$Component) {\n  _inherits(FilmDetail, _React$Component);\n\n  var _super = _createSuper(FilmDetail);\n\n  function FilmDetail(props) {\n    var _this;\n\n    _classCallCheck(this, FilmDetail);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      film: undefined,\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(FilmDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"componentDidMount\");\n      getFilmDetailFromApi(this.props.navigation.state.params.idFilm).then(function (data) {\n        _this2.setState({\n          film: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"_toggleFavorite\",\n    value: function _toggleFavorite() {\n      var action = {\n        type: \"TOGGLE_FAVORITE\",\n        value: this.state.film\n      };\n      this.props.dispatch(action);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(this.props.favoritesFilm);\n    }\n  }, {\n    key: \"_displayFavoriteImage\",\n    value: function _displayFavoriteImage() {\n      var _this3 = this;\n\n      var sourceImage = require('..Images/ic_favorite_border.png');\n\n      if (this.props.favoritesFilm.findIndex(function (item) {\n        return item.id === _this3.state.film.id;\n      }) !== -1) {\n        sourceImage = require('..Images/ic_favorite.png');\n      }\n\n      return React.createElement(Image, {\n        source: sourceImage,\n        style: styles.favorite_image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"_displayFilm\",\n    value: function _displayFilm() {\n      var _this4 = this;\n\n      var film = this.state.film;\n\n      if (film != undefined) {\n        return React.createElement(ScrollView, {\n          style: styles.scrollview_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }\n        }, React.createElement(Image, {\n          style: styles.image,\n          source: {\n            uri: getImageFromApi(film.backdrop_path)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }\n        }), React.createElement(Text, {\n          style: styles.title_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }\n        }, film.title), React.createElement(TouchableOpacity, {\n          style: styles.favorite_container,\n          onPress: function onPress() {\n            return _this4._toggleFavorite();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }\n        }, this._displayFavoriteImage()), React.createElement(Text, {\n          style: styles.description_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }\n        }, film.overview), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }\n        }, \"Sorti le\", moment(new Date(film.release_date)).format('DD/MM/YYYY')), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }\n        }, \"Note : \", film.vote_average, \" / 10 \"), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }\n        }, \"Nombre de vote : \", film.vote_count), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }\n        }, \"Budget :\", numeral(film.budget).format('0,0[.]00 $')), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, \"Genre(s) :\", film.genres.map(function (genre) {\n          return genre.name;\n        }).join(\" / \")), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }\n        }, \"Companie(s) :\", film.production_companies.map(function (company) {\n          return company.name;\n        }).join(\" / \")));\n      }\n    }\n  }, {\n    key: \"_displayLoading\",\n    value: function _displayLoading() {\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.loading_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(View, {\n        style: styles.main_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, this._displayFilm(), this._displayLoading());\n    }\n  }]);\n\n  return FilmDetail;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  main_container: {\n    flex: 1\n  },\n  loading_container: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollview_container: {\n    flex: 1\n  },\n  image: {\n    height: 169,\n    margin: 5\n  },\n  title_text: {\n    fontSize: 35,\n    fontWeight: \"bold\",\n    flex: 1,\n    flexWrap: 'wrap',\n    marginRight: 5,\n    marginLeft: 5,\n    marginTop: 10,\n    marginBottom: 10,\n    color: '#000000',\n    textAlign: 'center'\n  },\n  description_text: {\n    fontStyle: 'italic',\n    color: '#666666',\n    margin: 5,\n    marginBottom: 15\n  },\n  default_text: {\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 5\n  },\n  favorite_container: {\n    alignItems: 'center'\n  },\n  favorite_image: {\n    width: 40,\n    height: 40\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    favoritesFilm: state.favoritesFilm\n  };\n};\n\nexport default connect(mapStateToProps)(FilmDetail);","map":{"version":3,"sources":["/home/moussa-n/Bureau/Apps/Git/MoviesAndMe/Components/FilmDetail.js"],"names":["React","getFilmDetailFromApi","getImageFromApi","moment","numeral","connect","FilmDetail","props","state","film","undefined","isLoading","console","log","navigation","params","idFilm","then","data","setState","action","type","value","dispatch","favoritesFilm","sourceImage","require","findIndex","item","id","styles","favorite_image","scrollview_container","image","uri","backdrop_path","title_text","title","favorite_container","_toggleFavorite","_displayFavoriteImage","description_text","overview","default_text","Date","release_date","format","vote_average","vote_count","budget","genres","map","genre","name","join","production_companies","company","loading_container","main_container","_displayFilm","_displayLoading","Component","StyleSheet","create","flex","position","left","right","top","bottom","alignItems","justifyContent","height","margin","fontSize","fontWeight","flexWrap","marginRight","marginLeft","marginTop","marginBottom","color","textAlign","fontStyle","width","mapStateToProps"],"mappings":"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","sourcesContent":["import React  from 'react'\r\nimport { StyleSheet, View, Text, ActivityIndicator, ScrollView, TouchableOpacity, Image } from 'react-native'\r\nimport { getFilmDetailFromApi, getImageFromApi } from '../API/TMDBApi'\r\nimport moment from 'moment'\r\nimport numeral from 'numeral'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass FilmDetail extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props)\r\n            this.state = {\r\n                film: undefined,\r\n                isLoading: true \r\n            }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        console.log(\"componentDidMount\");\r\n\r\n        getFilmDetailFromApi(this.props.navigation.state.params.idFilm).then(data => {\r\n\r\n            this.setState({\r\n                film: data,\r\n                isLoading: false\r\n            })\r\n        })\r\n    }\r\n\r\n    _toggleFavorite() {\r\n        const action = { type: \"TOGGLE_FAVORITE\", value: this.state.film }\r\n        this.props.dispatch(action)\r\n    }\r\n\r\n    componentDidUpdate () {\r\n        console.log(this.props.favoritesFilm);\r\n        \r\n    }\r\n\r\n    _displayFavoriteImage () {\r\n        var sourceImage = require('..Images/ic_favorite_border.png')\r\n\r\n        if (this.props.favoritesFilm.findIndex(item => item.id === this.state.film.id) !== -1) {\r\n            sourceImage = require('..Images/ic_favorite.png')\r\n        }\r\n        return (\r\n            <Image\r\n                source={sourceImage}\r\n                style={styles.favorite_image}\r\n            />\r\n        )\r\n    }\r\n\r\n    _displayFilm() {\r\n\r\n    //    -------------- REVOIR CETTE PARTIE -------------------------------------------------------\r\n\r\n        const {film } = this.state\r\n        if (film != undefined) {\r\n            return (\r\n                <ScrollView style={styles.scrollview_container}>\r\n                    <Image\r\n                        style={styles.image}\r\n                        source={{uri: getImageFromApi(film.backdrop_path)}}\r\n                    />\r\n\r\n                    <Text style={styles.title_text}>{film.title}</Text>\r\n\r\n                    <TouchableOpacity \r\n                        style={styles.favorite_container} \r\n                        onPress={() => this._toggleFavorite()}>\r\n                        {this._displayFavoriteImage()}\r\n                    </TouchableOpacity>\r\n\r\n                    <Text style={styles.description_text}>{film.overview}</Text>\r\n                    <Text style={styles.default_text}>Sorti le \r\n                        {moment(new Date(film.release_date)).format('DD/MM/YYYY')}\r\n                    </Text>\r\n                    <Text style={styles.default_text}>Note : {film.vote_average} / 10 </Text>\r\n                    <Text style={styles.default_text}>Nombre de vote : {film.vote_count}</Text>\r\n                    <Text style={styles.default_text}>Budget :\r\n                        {numeral(film.budget).format('0,0[.]00 $')}\r\n                    </Text>\r\n                    <Text style={styles.default_text}>Genre(s) :\r\n                        {film.genres.map(function(genre){\r\n                            return genre.name;\r\n                        }).join(\" / \")}\r\n                    </Text>\r\n                    <Text style={styles.default_text}>Companie(s) :\r\n                        {film.production_companies.map(function(company){\r\n                            return company.name;\r\n                        }).join(\" / \")}\r\n                    </Text>\r\n\r\n\r\n                </ScrollView>\r\n            )\r\n        }\r\n\r\n       // -------------------- REVIENS ICI -------------------- REVIENS ICI ------------------------------\r\n    }\r\n\r\n    _displayLoading(){\r\n\r\n        if (this.state.isLoading) {\r\n\r\n            return (\r\n                <View style={styles.loading_container}>\r\n                    <ActivityIndicator size='large' />\r\n                </View>\r\n            )\r\n        }\r\n\r\n    }   \r\n\r\n    render() {\r\n        \r\n            console.log(this.props);\r\n            \r\n        return (\r\n\r\n            <View style={styles.main_container}>\r\n                {this._displayFilm()}\r\n                {this._displayLoading()}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    main_container: {\r\n        flex: 1,\r\n    },\r\n\r\n    loading_container : {\r\n\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    scrollview_container : {\r\n\r\n        flex: 1\r\n    },\r\n\r\n    // J'AI AJOUTER A PARTIR D'ICI POUR VOIR SUR LES DETAILS\r\n\r\n    image: {\r\n\r\n        height: 169,\r\n        margin: 5\r\n    },\r\n\r\n    title_text: {\r\n\r\n        fontSize: 35,\r\n        fontWeight: \"bold\",\r\n        flex: 1,\r\n        flexWrap: 'wrap',\r\n        marginRight: 5,\r\n        marginLeft: 5,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        color: '#000000',\r\n        textAlign: 'center'\r\n    },\r\n\r\n    description_text: {\r\n\r\n        fontStyle: 'italic',\r\n        color: '#666666',\r\n        margin: 5,\r\n        marginBottom: 15\r\n    },\r\n\r\n    default_text: {\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n        marginTop: 5\r\n    },\r\n\r\n    favorite_container: {\r\n        alignItems: 'center'\r\n    },\r\n\r\n    favorite_image: {\r\n        width: 40,\r\n        height: 40\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        favoritesFilm: state.favoritesFilm\r\n    }\r\n}\r\nexport default connect(mapStateToProps) (FilmDetail)"]},"metadata":{},"sourceType":"module"}